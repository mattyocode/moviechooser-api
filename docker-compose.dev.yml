version: "3.8"

services:
  movies:
    build: ./app
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.dev
    volumes:
      - ./app/:/app/
    ports:
      - 8000:8000
    env_file:
      - ./app/.env.dev
    depends_on:
      mc-dev-db:
        condition: service_healthy

  nginx:
    image: nginx:latest
    ports:
      - 80:80
    depends_on:
      - movies
    environment:
      - DJANGO_HOST=172.29.0.1
      - DJANGO_PORT=8000
      - _OUTPUT_DIR=/etc/nginx

  mc-dev-db:
    image: postgres:15-alpine
    container_name: mc-dev-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_dump:/dump
    environment:
      - POSTGRES_USER=movies
      - POSTGRES_PASSWORD=movies45654
      - POSTGRES_DB=mc_dev
    healthcheck:
      test: pg_isready -U movies -d mc_dev
      interval: 10s
      timeout: 3s
      retries: 3

  redis:
    image: redis:latest
    container_name: redis

  celery:
    build: ./app
    command: >
      celery -A config worker -l info
    volumes:
      - ./app/:/app/
    env_file:
      - ./app/.env.dev
    depends_on:
      - redis
      - nginx

  # celery-beat:
  #   build: ./app
  #   command: celery -A app beat -l info
  #   volumes:
  #     - ./app/:/app/
  #   env_file:
  #     - ./app/.env.dev
  #   depends_on:
  #     - celery


volumes:
  postgres_data:

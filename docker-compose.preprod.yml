version: "3.8"

services:
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - nginx
    command: >
      certonly --webroot --webroot-path=/var/www/html --email test@example.com --agree-tos --no-eff-email --dry-run -d v1.moviechooser.co.uk

  nginx:
    image: nginx:1.19-alpine
    container_name: nginx
    restart: on-failure
    depends_on:
      - djangogunicorn
    ports:
      - 80:80
      - 443:443
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    networks:
      - app-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; \
      nginx -s reload; done & nginx -g \"daemon off;\"'"

  djangogunicorn:
    build:
      context: ./app
      dockerfile: Dockerfile.inst.prod
    container_name: djangogunicorn
    restart: unless-stopped
    volumes:
      - ./app/:/app/
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.prod
    ports:
      - "8000:8000"
    env_file:
      - ./app/.env
    networks:
      - app-network

volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local

networks:
  app-network:
    driver: bridge

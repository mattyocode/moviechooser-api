# syntax = docker/dockerfile:1.2

# Pull base image
FROM python:3.9.5-slim-buster

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV PIP_NO_CACHE_DIR off
ENV PIP_DISABLE_PIP_VERSION_CHECK on
ENV PIP_DEFAULT_TIMEOUT=100
ENV POETRY_VERSION 1.0.0
ENV DEBUG 0
ENV DJANGO_SETTINGS_MODULE config.settings.prod
ARG SECRET_KEY $SECRET_KEY
ENV DJANGO_ALLOWED_HOSTS localhost 127.0.0.1 [::1]

# install postgres deps
RUN apt-get update \
  && apt-get -y install netcat gcc postgresql \
  && apt-get clean

# install dependencies
RUN pip install "poetry==$POETRY_VERSION"

# set working directory
WORKDIR /app
# copy only requirements to cache them in Docker layer
COPY poetry.lock pyproject.toml /app/

RUN poetry config virtualenvs.create false \
  && poetry install --no-interaction --no-ansi

# copy entrypoint.sh
COPY ./entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

COPY . .

# collect static files
RUN python manage.py collectstatic --noinput

# add and run as non-root user
RUN adduser --disabled-password myuser
USER myuser

# run gunicorn
CMD gunicorn config.wsgi:application --bind 0.0.0.0:$DJANGO_PORT